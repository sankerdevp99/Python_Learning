import numpy as np
import pandas as pd
import shap
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split
import statsmodels.api as sm
from statsmodels.sandbox.regression.predstd import wls_prediction_std

Total_Simulation_Time = [24.1, 23.9, 25.2, 24.3, 25.1, 23.8, 24.5, 24.4, 24.3, 24.2, 25.2, 24.8, 24.4, 24.8, 24.4, 23.9, 24.3, 25.0, 24.0, 24.3, 24.5, 24.4, 24.3, 25.5, 24.9, 23.6, 23.5, 23.6, 25.3, 23.1, 24.3, 23.9, 24.9, 23.2, 23.1, 26.0, 23.0, 24.2, 23.9, 26.2, 24.7, 24.1, 25.2, 24.8, 23.8, 23.2, 25.8, 23.6, 23.2, 24.0, 24.2, 24.3, 24.1, 23.2, 23.1, 24.1, 23.5, 24.9, 24.3, 25.2, 24.6, 24.3, 23.9, 23.1, 24.3, 24.3, 24.2, 24.0, 24.5, 24.2, 24.4, 24.7, 24.1, 24.7, 23.9, 25.8, 24.4, 23.5, 24.0, 24.1, 23.9, 24.4, 22.4, 25.3, 23.9, 24.2, 25.2, 23.5, 25.7, 24.3, 25.1, 25.2, 24.6, 23.3, 23.5, 23.9, 24.5, 24.0, 24.2, 24.7, 25.8, 23.1, 24.8, 24.5, 24.5, 24.6, 24.0, 24.8, 25.1, 24.3, 24.0, 24.8, 23.3, 22.9, 25.0, 23.6, 25.2, 23.9, 23.6, 24.8, 24.0, 24.3, 25.5, 24.1, 23.8, 24.9, 24.3, 25.4, 24.1, 24.5, 24.0, 25.2, 24.8, 23.4, 23.3, 24.2, 24.5, 24.8, 23.8, 25.5, 25.2, 25.2, 25.3, 25.4, 23.4, 24.2, 24.5, 24.2, 24.8, 24.2, 24.7, 24.0, 24.3, 25.8, 24.3, 24.2, 24.7, 24.5, 24.3, 25.0, 23.8, 24.3, 23.1, 23.8, 24.0, 23.9, 25.1, 25.0, 22.9, 24.5, 24.4, 24.5, 24.2, 25.3, 24.1, 24.7, 25.1, 25.3, 24.2, 25.3, 25.0, 24.7, 23.7, 23.8, 23.7, 25.0, 25.3, 24.5, 25.0, 24.6, 24.0, 24.2, 23.9, 24.2, 24.3, 24.7, 23.0, 23.7, 23.7, 23.7, 23.8, 25.5, 24.8, 25.1, 23.3, 25.4, 24.0, 24.6, 23.9, 23.6, 24.6, 24.4, 24.3, 25.5, 24.8, 24.2, 25.2, 24.4, 25.0, 24.5, 24.3, 24.4, 25.5, 24.4, 24.2, 23.9, 25.4, 23.9, 25.1, 24.5, 25.7, 25.1, 23.6, 23.9, 23.9, 25.7, 24.6, 23.7, 24.8, 24.6, 23.9, 24.3, 22.4, 24.1, 24.2, 24.5, 23.1, 24.3, 23.1, 26.4, 24.8, 25.5, 25.1, 25.0, 24.5, 23.1, 24.3, 24.2, 24.6, 23.8, 24.2, 23.7, 25.1, 23.7, 24.4, 24.0, 25.2, 25.4, 24.8, 25.7, 24.5, 25.0, 25.2, 23.9, 23.5, 24.5, 24.1, 24.9, 24.9, 25.8, 22.8, 24.2, 25.1, 24.7, 25.5, 23.3, 25.2, 24.9, 25.0, 24.3, 25.2, 25.2, 23.5, 24.0, 25.6, 24.3, 24.8, 23.0, 25.2, 24.8, 25.1, 24.6, 24.6, 23.9, 25.4, 24.1, 25.2, 25.1, 23.6, 24.5, 24.2, 23.8, 25.3, 23.6, 23.8, 25.5, 23.7, 23.3, 25.4, 23.5, 24.9, 24.5, 24.1, 24.4, 24.9, 23.8, 24.7, 24.6, 24.3, 23.8, 24.8, 25.1, 24.6, 24.5, 25.4, 24.6, 25.1, 24.2, 24.5, 24.8, 24.2, 23.0, 25.0, 24.7, 24.3, 24.7, 23.5, 24.7, 25.5, 24.1, 24.7, 24.3, 24.6, 24.8, 24.2, 23.9, 23.1, 25.1, 23.2, 24.9, 24.2, 24.6, 25.2, 24.2, 24.2, 24.2, 23.7, 23.8, 23.5, 24.7, 23.5, 24.0, 24.9, 23.1, 23.6, 24.9, 24.2, 23.5, 23.9, 24.6, 25.4, 23.6, 23.2, 24.4, 23.4, 24.4, 23.9, 24.8, 23.5, 24.2, 25.6, 24.8, 24.0, 25.4, 23.8, 24.6, 24.8, 25.4, 25.3, 24.2, 24.9, 23.5, 24.5, 24.6, 23.1, 23.8, 24.4, 25.0, 23.3, 23.7, 23.5, 25.0, 24.2, 24.4, 24.2, 24.1, 25.5, 24.4, 24.8, 24.7, 24.2, 24.2, 24.3, 25.1, 23.1, 24.9, 23.7, 23.9, 23.5, 24.2, 23.7, 24.9, 25.2, 24.5]
Total_Simulation_Loaded_Velocities=[4.13, 4.04, 3.92, 4.01, 3.78, 4.13, 4.04, 3.97, 4.17, 3.91, 4.04, 4.17, 4.1, 3.9, 3.94, 4.08, 4.17, 3.93, 4.05, 4.18, 4.11, 3.97, 4.25, 3.89, 3.97, 3.99, 4.23, 3.83, 4.01, 4.08, 4.26, 4.08, 4.09, 4.15, 4.15, 3.74, 4.21, 4.16, 4.0, 3.83, 3.81, 4.23, 4.04, 4.06, 3.97, 4.02, 4.14, 4.12, 4.1, 3.97, 4.05, 4.07, 3.94, 4.13, 4.23, 3.95, 3.86, 3.94, 4.08, 3.78, 4.21, 4.05, 4.05, 4.13, 4.04, 3.9, 4.32, 4.0, 4.06, 4.01, 3.99, 4.09, 3.91, 3.96, 4.01, 4.13, 4.04, 4.31, 4.07, 4.04, 4.12, 3.98, 4.29, 4.29, 4.3, 4.05, 3.95, 4.02, 3.98, 3.87, 4.0, 4.1, 3.88, 4.05, 4.03, 4.04, 3.93, 4.28, 4.24, 4.12, 3.9, 4.34, 4.05, 4.31, 3.97, 3.91, 4.22, 4.1, 4.0, 4.13, 4.05, 4.06, 4.13, 4.11, 4.15, 4.2, 4.08, 4.17, 4.0, 4.1, 4.06, 4.1, 3.92, 3.84, 4.29, 4.01, 4.04, 4.09, 3.87, 3.84, 4.07, 4.02, 4.14, 4.12, 4.06, 4.03, 4.05, 3.93, 3.98, 4.05, 4.16, 4.02, 3.98, 4.13, 4.12, 3.96, 4.29, 4.08, 3.89, 3.78, 4.04, 3.95, 4.2, 3.93, 4.01, 3.99, 3.87, 3.8, 4.17, 3.95, 4.08, 4.1, 3.96, 3.98, 4.04, 4.12, 4.07, 4.03, 4.16, 4.06, 4.15, 4.05, 3.92, 4.01, 4.19, 3.94, 3.95, 4.13, 4.04, 4.06, 3.96, 4.18, 3.94, 3.95, 4.1, 3.82, 3.98, 4.08, 3.97, 3.73, 4.11, 3.96, 4.06, 4.06, 3.9, 3.9, 4.08, 4.15, 4.08, 4.16, 4.06, 3.99, 4.11, 3.86, 4.09, 3.74, 4.05, 4.11, 3.92, 3.96, 4.18, 4.08, 4.07, 4.08, 3.96, 3.99, 4.09, 3.94, 3.82, 4.0, 4.08, 4.28, 3.92, 3.92, 3.95, 4.0, 4.14, 3.95, 3.77, 4.12, 3.99, 4.02, 3.94, 4.03, 4.08, 3.84, 4.05, 3.9, 3.97, 4.02, 4.2, 4.15, 4.08, 4.21, 3.86, 4.15, 4.28, 3.91, 4.15, 3.91, 4.04, 3.92, 4.23, 3.92, 4.01, 4.3, 3.89, 3.85, 4.03, 3.88, 3.89, 4.22, 3.91, 4.07, 3.73, 3.9, 4.11, 3.89, 4.07, 4.1, 3.94, 3.97, 3.78, 4.11, 4.13, 3.77, 3.97, 4.13, 4.06, 3.92, 4.27, 4.06, 4.16, 3.98, 4.05, 4.24, 4.03, 3.92, 4.19, 4.2, 4.1, 3.84, 3.99, 4.03, 3.87, 4.0, 3.78, 4.33, 4.04, 4.0, 3.91, 3.95, 3.94, 4.09, 3.75, 4.01, 3.82, 4.03, 4.07, 4.13, 4.07, 4.25, 3.75, 3.99, 4.31, 3.95, 4.16, 3.89, 4.07, 4.01, 4.05, 3.88, 4.0, 4.13, 4.02, 4.23, 4.0, 4.0, 4.03, 4.35, 3.94, 4.21, 3.97, 4.03, 4.0, 4.09, 3.94, 3.91, 3.92, 3.81, 4.19, 3.96, 4.13, 3.99, 3.99, 4.0, 4.32, 4.05, 3.84, 4.13, 4.13, 4.02, 4.15, 4.12, 3.98, 4.18, 3.89, 4.05, 4.08, 4.18, 4.02, 4.07, 3.92, 3.96, 4.11, 4.04, 4.06, 4.29, 4.17, 4.08, 4.13, 3.97, 3.88, 4.08, 4.02, 3.95, 3.99, 4.36, 4.06, 4.17, 3.79, 4.03, 3.93, 3.97, 4.05, 4.15, 3.92, 3.97, 3.93, 3.97, 3.99, 4.04, 4.13, 3.93, 3.84, 4.06, 4.07, 3.9, 3.87, 4.06, 3.88, 4.15, 4.15, 3.96, 4.22, 3.97, 3.99, 3.92, 4.02, 4.01, 4.12, 3.94, 4.14, 4.03, 3.93, 4.15, 4.0, 3.84, 3.98, 3.77, 4.23, 3.78, 4.1, 4.17, 4.18, 4.17, 4.17, 4.07, 4.34, 4.29, 3.97, 3.93, 4.17, 4.04]
Total_Simulation_Unloaded_Velocities=[6.2, 6.68, 5.99, 6.67, 5.81, 6.25, 6.07, 6.57, 6.67, 6.34, 6.02, 6.22, 6.04, 6.47, 6.4, 6.36, 6.03, 6.19, 6.22, 6.5, 6.1, 6.6, 6.49, 6.05, 5.89, 6.47, 6.7, 6.6, 6.18, 6.79, 6.29, 6.18, 6.28, 6.08, 6.28, 6.36, 6.2, 6.55, 6.48, 5.86, 5.62, 6.4, 6.31, 6.49, 6.14, 6.35, 6.17, 6.34, 5.94, 6.5, 6.04, 6.46, 6.04, 6.77, 6.6, 6.31, 5.97, 6.21, 6.7, 5.9, 6.21, 6.02, 6.01, 6.13, 6.15, 6.34, 6.2, 6.25, 6.19, 5.84, 6.38, 6.06, 6.22, 6.22, 6.42, 5.99, 6.25, 6.19, 6.24, 6.25, 6.48, 6.05, 6.67, 6.47, 6.13, 6.09, 6.44, 6.37, 5.94, 7.06, 6.07, 5.89, 5.83, 6.13, 6.65, 6.15, 6.26, 6.11, 5.92, 6.58, 5.91, 6.24, 6.04, 6.24, 6.19, 5.98, 6.15, 6.33, 6.39, 6.5, 5.86, 6.67, 6.16, 6.19, 6.07, 5.92, 6.38, 6.24, 6.2, 6.37, 6.2, 6.33, 6.1, 6.28, 6.14, 6.01, 6.28, 5.98, 6.13, 6.3, 6.11, 6.17, 5.9, 6.2, 6.31, 6.58, 6.34, 6.46, 6.28, 6.04, 6.16, 5.68, 6.28, 5.88, 6.66, 6.17, 6.33, 6.17, 6.36, 6.36, 6.7, 6.84, 6.46, 6.12, 6.48, 5.99, 6.56, 6.23, 6.29, 6.14, 6.31, 6.03, 5.73, 6.18, 6.3, 6.61, 6.29, 5.92, 6.32, 6.47, 6.08, 6.37, 6.24, 6.46, 6.33, 5.91, 6.45, 6.51, 6.17, 5.86, 6.35, 6.19, 6.01, 6.28, 6.13, 6.46, 6.27, 6.1, 6.16, 6.02, 6.2, 6.39, 5.96, 5.68, 6.18, 6.38, 6.37, 6.06, 6.1, 5.85, 6.44, 6.27, 5.86, 6.4, 6.12, 6.04, 6.31, 6.5, 6.18, 6.6, 6.28, 6.23, 6.34, 6.07, 5.92, 5.92, 6.07, 5.95, 6.18, 6.57, 6.15, 6.32, 5.92, 6.11, 6.11, 6.07, 6.05, 6.18, 6.28, 5.91, 6.38, 6.12, 5.78, 6.49, 6.1, 6.3, 6.17, 5.88, 6.16, 6.16, 5.84, 6.38, 6.59, 6.12, 5.75, 6.44, 6.34, 6.27, 6.23, 5.95, 6.15, 6.26, 6.18, 6.21, 6.51, 6.27, 6.4, 6.29, 6.66, 6.23, 5.99, 6.27, 6.08, 6.08, 5.93, 6.5, 6.2, 5.96, 6.08, 5.98, 6.57, 6.3, 6.05, 5.92, 6.64, 6.46, 6.0, 5.53, 5.58, 6.56, 6.49, 5.98, 6.29, 6.09, 6.45, 6.32, 6.14, 5.93, 6.31, 6.43, 6.04, 6.07, 6.28, 6.32, 5.65, 6.17, 6.14, 6.96, 6.26, 5.92, 6.52, 6.47, 6.52, 6.32, 5.95, 6.28, 6.46, 6.05, 6.5, 6.14, 6.26, 6.03, 5.72, 6.26, 6.33, 6.22, 6.61, 6.51, 6.21, 6.29, 6.29, 6.84, 6.44, 6.4, 6.53, 6.26, 6.52, 6.28, 6.81, 6.02, 5.99, 5.91, 6.44, 6.26, 6.22, 5.97, 6.18, 6.15, 6.25, 6.06, 6.44, 6.49, 6.24, 6.1, 6.07, 6.1, 6.6, 5.97, 6.1, 6.1, 6.01, 6.43, 6.3, 6.16, 6.04, 5.83, 6.66, 6.37, 6.61, 6.5, 6.74, 6.29, 6.06, 5.96, 6.45, 5.99, 6.51, 6.71, 6.04, 6.36, 6.56, 6.09, 6.5, 6.12, 6.49, 6.23, 6.27, 5.86, 6.15, 6.24, 6.02, 6.23, 6.21, 6.52, 6.31, 6.3, 6.52, 6.33, 6.2, 6.14, 5.98, 6.25, 6.32, 6.55, 6.28, 6.36, 6.32, 6.01, 6.05, 6.34, 6.37, 6.53, 5.87, 5.89, 6.27, 6.65, 6.38, 6.2, 6.34, 6.1, 6.06, 6.26, 6.67, 6.24, 6.16, 6.17, 6.37, 6.71, 6.24, 6.4, 5.74, 6.42, 6.55, 5.87, 6.46, 6.32, 6.16, 6.31, 6.79, 6.35, 6.21, 6.34, 6.0, 6.23]
Total_Simulation_Loaded_ShovelRate=[0.5028, 0.5046, 0.4901, 0.5076, 0.4907, 0.4804, 0.4903, 0.4985, 0.5195, 0.5141, 0.5032, 0.4955, 0.4935, 0.4818, 0.5136, 0.4994, 0.4984, 0.5088, 0.5145, 0.5009, 0.5054, 0.5018, 0.4889, 0.5039, 0.4976, 0.5056, 0.4832, 0.492, 0.5072, 0.4962, 0.5226, 0.5021, 0.5044, 0.507, 0.5076, 0.4959, 0.515, 0.5101, 0.5011, 0.4899, 0.484, 0.4876, 0.492, 0.4944, 0.472, 0.4925, 0.4877, 0.4906, 0.4761, 0.4956, 0.4871, 0.4834, 0.5106, 0.507, 0.5039, 0.4981, 0.5221, 0.5143, 0.5029, 0.5163, 0.5085, 0.5033, 0.5048, 0.5225, 0.5091, 0.5057, 0.5055, 0.5122, 0.5102, 0.5134, 0.5005, 0.51, 0.5107, 0.4904, 0.5003, 0.4872, 0.4993, 0.5102, 0.506, 0.5042, 0.4864, 0.5023, 0.5137, 0.4919, 0.5092, 0.5052, 0.4849, 0.4888, 0.5141, 0.4949, 0.4788, 0.4911, 0.4829, 0.5123, 0.5211, 0.4875, 0.5349, 0.5071, 0.5222, 0.5011, 0.501, 0.5006, 0.5021, 0.5073, 0.4806, 0.5162, 0.5022, 0.4877, 0.5028, 0.4975, 0.5081, 0.4856, 0.5159, 0.5083, 0.4979, 0.5048, 0.5019, 0.4951, 0.503, 0.5128, 0.4971, 0.5079, 0.5306, 0.5127, 0.4796, 0.5126, 0.5058, 0.4974, 0.5255, 0.5111, 0.4961, 0.5011, 0.4854, 0.5069, 0.5081, 0.5051, 0.4849, 0.4929, 0.5161, 0.4917, 0.5137, 0.5062, 0.4954, 0.5142, 0.5158, 0.48, 0.4994, 0.5109, 0.508, 0.4981, 0.5049, 0.5101, 0.5125, 0.5013, 0.4959, 0.4751, 0.4917, 0.4899, 0.4861, 0.495, 0.5053, 0.5028, 0.5089, 0.5001, 0.532, 0.4994, 0.4859, 0.4958, 0.496, 0.4858, 0.4877, 0.5144, 0.5057, 0.503, 0.4951, 0.4825, 0.5004, 0.4888, 0.5102, 0.4864, 0.5015, 0.5106, 0.4997, 0.5142, 0.5052, 0.4785, 0.4915, 0.5059, 0.464, 0.499, 0.4981, 0.5165, 0.511, 0.5022, 0.4903, 0.4976, 0.504, 0.4938, 0.512, 0.4886, 0.4851, 0.4787, 0.4939, 0.5145, 0.4895, 0.4943, 0.4921, 0.4951, 0.489, 0.5055, 0.5032, 0.4804, 0.4971, 0.512, 0.5076, 0.5257, 0.5168, 0.4776, 0.4912, 0.4951, 0.4727, 0.4883, 0.5111, 0.5208, 0.5032, 0.509, 0.497, 0.4804, 0.5049, 0.4993, 0.5004, 0.52, 0.4874, 0.5102, 0.5175, 0.5039, 0.5018, 0.5007, 0.5043, 0.5154, 0.4774, 0.4799, 0.5147, 0.4926, 0.5069, 0.5045, 0.487, 0.4908, 0.5146, 0.528, 0.5068, 0.4922, 0.5182, 0.4942, 0.4948, 0.504, 0.5105, 0.5283, 0.4728, 0.518, 0.4962, 0.4958, 0.5133, 0.5052, 0.481, 0.4999, 0.4909, 0.5066, 0.5054, 0.5015, 0.501, 0.4879, 0.4739, 0.4991, 0.4919, 0.4897, 0.4982, 0.4954, 0.494, 0.4908, 0.5194, 0.5284, 0.4954, 0.5085, 0.51, 0.5176, 0.5059, 0.491, 0.4954, 0.5244, 0.5088, 0.5137, 0.4843, 0.514, 0.4975, 0.4821, 0.5044, 0.5091, 0.5084, 0.5061, 0.5089, 0.4848, 0.5039, 0.4936, 0.4989, 0.5193, 0.4882, 0.522, 0.5192, 0.5248, 0.5127, 0.5041, 0.5078, 0.4967, 0.505, 0.4915, 0.5078, 0.5073, 0.4816, 0.5131, 0.5017, 0.4994, 0.5033, 0.5097, 0.493, 0.5103, 0.4803, 0.4864, 0.495, 0.5096, 0.4828, 0.5004, 0.4857, 0.5025, 0.4921, 0.5066, 0.4922, 0.4917, 0.4897, 0.4837, 0.4896, 0.5015, 0.5094, 0.4999, 0.525, 0.4954, 0.4907, 0.5192, 0.507, 0.5022, 0.4866, 0.5106, 0.4844, 0.5091, 0.4858, 0.5097, 0.5192, 0.5077, 0.5092, 0.4958, 0.4899, 0.4896, 0.4865, 0.5114, 0.5156, 0.4968, 0.4976, 0.4803, 0.523, 0.5187, 0.5249, 0.5234, 0.4976, 0.5211, 0.521, 0.4994, 0.4978, 0.4936, 0.4969, 0.5089, 0.5072, 0.5042, 0.5032, 0.4821, 0.5017, 0.5066, 0.4971, 0.5195, 0.5223, 0.485, 0.5094, 0.516, 0.4749, 0.4991, 0.5108, 0.4935, 0.5004, 0.5076, 0.4878, 0.4957, 0.4949, 0.4917, 0.4832, 0.4855, 0.4694, 0.5042, 0.5019, 0.5361, 0.4939, 0.4926, 0.4902, 0.5124, 0.5086, 0.4951, 0.5263, 0.4959, 0.4906, 0.511, 0.5033, 0.5082, 0.5, 0.5139, 0.4936, 0.4984, 0.5128, 0.5017, 0.5038, 0.4881, 0.5092, 0.5149, 0.506, 0.501, 0.4949, 0.4918]
Total_Simulation_UnLoaded_ShovelRate=[0.2508, 0.2566, 0.2348, 0.2457, 0.2588, 0.267, 0.2609, 0.2461, 0.2557, 0.2478, 0.2473, 0.2524, 0.2556, 0.2456, 0.2533, 0.2467, 0.2565, 0.2507, 0.2521, 0.255, 0.2488, 0.244, 0.2395, 0.2417, 0.254, 0.2551, 0.2582, 0.2576, 0.244, 0.2544, 0.2579, 0.2597, 0.2417, 0.2602, 0.2647, 0.2359, 0.268, 0.2395, 0.2512, 0.2477, 0.2654, 0.2575, 0.2505, 0.2454, 0.2626, 0.2577, 0.2486, 0.2646, 0.269, 0.2577, 0.2584, 0.2437, 0.2587, 0.2594, 0.2539, 0.2523, 0.2647, 0.2621, 0.249, 0.2471, 0.2396, 0.2473, 0.2522, 0.2603, 0.2434, 0.243, 0.2456, 0.2697, 0.2519, 0.254, 0.2414, 0.2368, 0.2509, 0.2583, 0.2561, 0.2476, 0.2558, 0.2599, 0.2463, 0.2463, 0.25, 0.2499, 0.2572, 0.2512, 0.2449, 0.2584, 0.2448, 0.2503, 0.2536, 0.2572, 0.248, 0.2494, 0.2498, 0.2476, 0.2705, 0.2638, 0.2616, 0.2506, 0.2398, 0.2453, 0.2462, 0.246, 0.2462, 0.2377, 0.259, 0.2414, 0.2568, 0.2405, 0.2531, 0.2452, 0.2515, 0.2346, 0.2451, 0.2447, 0.2599, 0.2493, 0.2357, 0.2616, 0.2606, 0.2416, 0.2572, 0.2501, 0.246, 0.2597, 0.2497, 0.25, 0.2533, 0.2377, 0.2484, 0.2448, 0.2418, 0.2469, 0.254, 0.2645, 0.2512, 0.2448, 0.2565, 0.2607, 0.2498, 0.2443, 0.2531, 0.2381, 0.2302, 0.2526, 0.2483, 0.2614, 0.2501, 0.2649, 0.2446, 0.2708, 0.2451, 0.2558, 0.2395, 0.2383, 0.2424, 0.2452, 0.2438, 0.2601, 0.2466, 0.2334, 0.2542, 0.2581, 0.2564, 0.2484, 0.2384, 0.259, 0.2569, 0.2334, 0.2494, 0.2548, 0.2539, 0.2392, 0.2717, 0.2442, 0.2463, 0.2505, 0.2425, 0.2437, 0.2555, 0.2492, 0.2467, 0.2474, 0.2529, 0.2632, 0.2619, 0.2489, 0.2397, 0.244, 0.2472, 0.2482, 0.2526, 0.2508, 0.2487, 0.2491, 0.2577, 0.2453, 0.257, 0.2558, 0.2622, 0.2618, 0.2555, 0.2409, 0.248, 0.2633, 0.246, 0.2614, 0.2511, 0.2543, 0.2555, 0.2406, 0.2536, 0.2536, 0.2497, 0.2367, 0.2526, 0.2701, 0.2435, 0.2675, 0.2545, 0.2435, 0.2402, 0.2464, 0.2336, 0.2418, 0.2596, 0.2426, 0.2344, 0.2531, 0.2488, 0.2531, 0.2383, 0.2396, 0.2739, 0.2625, 0.2654, 0.2523, 0.2396, 0.2562, 0.2493, 0.2681, 0.2523, 0.2615, 0.2543, 0.2539, 0.267, 0.2646, 0.2725, 0.261, 0.2617, 0.228, 0.2442, 0.2469, 0.2621, 0.2458, 0.243, 0.2502, 0.2579, 0.2501, 0.2533, 0.2586, 0.2539, 0.2615, 0.2426, 0.2504, 0.2572, 0.2492, 0.2499, 0.2383, 0.2524, 0.2341, 0.2443, 0.2496, 0.2534, 0.255, 0.2578, 0.2551, 0.2564, 0.2386, 0.2596, 0.2445, 0.2543, 0.2631, 0.243, 0.2476, 0.2416, 0.2455, 0.2501, 0.2516, 0.2326, 0.2473, 0.2483, 0.2489, 0.2643, 0.2515, 0.2521, 0.2517, 0.2564, 0.2567, 0.2456, 0.2356, 0.2371, 0.2497, 0.2581, 0.2606, 0.258, 0.2557, 0.2375, 0.2362, 0.2387, 0.2406, 0.234, 0.2482, 0.2401, 0.2585, 0.2347, 0.2433, 0.2507, 0.2612, 0.245, 0.2574, 0.2347, 0.2485, 0.2608, 0.245, 0.2422, 0.2653, 0.2498, 0.2516, 0.2452, 0.2459, 0.2444, 0.2548, 0.2586, 0.2488, 0.2432, 0.249, 0.2388, 0.2509, 0.2578, 0.2526, 0.2438, 0.2636, 0.2441, 0.2405, 0.255, 0.2387, 0.2616, 0.2609, 0.2542, 0.2472, 0.2444, 0.2762, 0.251, 0.2417, 0.2359, 0.2479, 0.2726, 0.2432, 0.2465, 0.2395, 0.2474, 0.239, 0.2489, 0.2455, 0.2496, 0.2539, 0.2776, 0.2482, 0.2558, 0.2334, 0.2597, 0.251, 0.2533, 0.27, 0.2463, 0.2464, 0.2502, 0.2528, 0.2498, 0.2514, 0.2417, 0.2484, 0.2634, 0.2406, 0.2634, 0.2535, 0.2475, 0.2376, 0.2661, 0.2561, 0.2513, 0.2334, 0.2507, 0.2597, 0.2508, 0.2661, 0.2452, 0.2411, 0.2401, 0.2538, 0.2417, 0.2487, 0.2661, 0.255, 0.2629, 0.2405, 0.2553, 0.243, 0.2475, 0.2606, 0.2535, 0.2452, 0.245, 0.2361, 0.248, 0.2518, 0.2406, 0.2442, 0.2492, 0.2585, 0.2445, 0.2577, 0.2556, 0.2456, 0.2444, 0.2367, 0.2435, 0.2561, 0.2466, 0.2422, 0.2523, 0.2441, 0.2377, 0.2554]
Total_Simulation_Loaded_Velocities_Variance=[3.6652, 3.5025, 3.2482, 3.6753, 4.2244, 4.0341, 4.2224, 3.8981, 4.016, 3.5221, 3.5018, 4.1122, 3.8696, 3.6232, 3.7214, 3.0659, 3.7567, 3.6692, 3.6282, 4.2694, 3.8811, 3.5874, 3.6761, 4.0237, 3.9926, 3.7798, 3.4261, 3.7355, 3.6322, 4.1374, 3.3579, 3.2307, 3.739, 3.7628, 3.4338, 3.9401, 3.8768, 3.9064, 4.0218, 3.3893, 3.5517, 3.9007, 4.0496, 3.577, 3.567, 3.8206, 3.1558, 3.5573, 3.5142, 3.5887, 3.9532, 3.5427, 3.9664, 3.0479, 4.4036, 3.4587, 3.9097, 3.6893, 3.2687, 4.3245, 3.8306, 4.0379, 3.5779, 3.672, 3.9902, 3.9726, 4.2953, 3.8413, 3.4452, 3.6053, 3.6407, 3.7225, 3.5834, 3.3486, 3.8911, 4.1455, 4.3727, 3.3203, 4.8373, 4.2906, 3.342, 3.3945, 4.6496, 3.9715, 4.0722, 3.8401, 3.718, 3.996, 3.2215, 3.4503, 3.59, 3.4012, 3.6509, 3.3522, 4.0462, 3.5925, 3.4473, 4.4028, 4.4491, 4.1455, 3.515, 3.421, 3.1617, 3.5989, 3.8203, 4.2431, 4.0653, 3.7645, 3.6948, 4.0098, 3.9152, 3.3251, 4.3364, 3.7678, 4.0912, 3.4065, 3.5654, 3.7381, 4.1285, 3.0534, 3.8989, 4.1141, 4.1006, 3.5009, 3.841, 3.6855, 4.0181, 3.6419, 3.7831, 3.6962, 3.7902, 3.5529, 3.9009, 4.0445, 3.7175, 3.0153, 3.4636, 3.8446, 3.1137, 3.6412, 3.5231, 3.3703, 3.7187, 3.5686, 4.4877, 3.6601, 3.4822, 3.7005, 3.7493, 3.4432, 3.6004, 3.486, 4.0864, 3.7972, 3.6505, 3.6668, 3.4288, 3.4584, 3.4068, 3.7636, 3.9157, 3.6145, 3.6347, 4.0371, 4.1574, 3.5784, 3.198, 4.3143, 3.5149, 4.1538, 3.4955, 3.5443, 3.3496, 3.6819, 3.3455, 3.1234, 3.8827, 3.4763, 3.9433, 3.4519, 3.538, 4.0925, 3.3686, 3.0158, 3.8293, 3.6682, 3.6059, 3.6741, 3.6859, 4.0752, 3.4929, 3.8846, 3.9582, 3.4343, 4.1106, 3.7291, 3.5816, 3.6241, 4.1857, 3.0377, 3.5587, 3.1063, 3.4775, 3.5443, 3.8762, 3.7971, 3.9367, 4.0769, 3.6736, 3.5573, 4.417, 3.6956, 4.2205, 4.0508, 3.8639, 4.5442, 4.2665, 3.9496, 4.0294, 3.6318, 3.7044, 3.4514, 4.5254, 4.213, 3.8684, 3.7113, 3.4998, 4.2823, 3.21, 3.9555, 4.6467, 3.9125, 3.6447, 4.1611, 3.3765, 2.7948, 3.4939, 3.4529, 4.1139, 3.1647, 4.0564, 3.8884, 3.477, 3.806, 3.5595, 3.4858, 4.4965, 3.7531, 3.5998, 3.7968, 4.5486, 3.4543, 3.8135, 3.6502, 3.6091, 3.6881, 3.7405, 3.6578, 3.339, 3.6051, 3.8755, 4.5068, 3.5739, 3.5843, 4.2447, 2.9899, 3.8442, 3.8447, 3.9509, 3.4354, 3.8472, 4.1833, 3.6055, 3.6486, 4.0865, 2.9533, 3.8442, 3.4109, 3.5244, 3.0248, 3.8311, 4.0006, 3.6484, 3.2457, 3.713, 4.0431, 3.3339, 3.7326, 3.3333, 3.6153, 2.8177, 3.9874, 3.786, 3.902, 3.9502, 3.3265, 3.7602, 3.8023, 4.2367, 3.8292, 4.1657, 3.6651, 3.7258, 3.821, 3.9049, 3.6479, 3.9624, 3.2592, 3.5228, 3.6479, 3.518, 3.545, 3.7024, 3.8515, 3.7531, 3.6981, 3.5116, 3.5699, 4.2787, 2.858, 3.2627, 3.4383, 3.7044, 3.4341, 3.6642, 3.8858, 3.6633, 3.8495, 4.3664, 3.9137, 3.5801, 3.7705, 3.5592, 3.7514, 3.5111, 3.4872, 3.517, 3.6539, 3.4254, 3.6918, 4.184, 3.6838, 4.0205, 3.9473, 3.4329, 3.3992, 4.1542, 3.5805, 4.222, 3.1046, 3.6663, 3.6415, 3.3284, 3.6962, 3.3921, 4.1666, 3.5492, 3.3092, 3.8166, 3.6954, 3.5244, 3.787, 3.6454, 3.2214, 3.5555, 3.9019, 3.7185, 4.6253, 3.8132, 3.8402, 3.5867, 4.0573, 3.0461, 3.5462, 4.1468, 3.7705, 3.1217, 3.7703, 3.956, 4.0217, 3.3278, 3.5479, 3.079, 3.5713, 3.4134, 3.5134, 4.2017, 3.5348, 3.628, 3.6902, 3.7991, 3.4152, 3.5785, 3.3533, 3.6285, 3.2875, 3.4649, 3.4363, 3.7114, 3.8269, 3.6608, 3.4705, 3.3886, 3.5552, 3.1732, 3.3306, 3.5189, 3.6042, 3.8495, 3.3254, 3.9814, 3.6966, 3.7694, 3.7722, 3.7961, 3.3569, 3.2458, 3.4614, 3.1446, 3.4532, 4.1475, 3.7904, 3.7948, 4.4212, 3.1079, 4.4968, 3.8126, 4.0187, 3.3971, 4.214, 3.6015, 3.6866, 4.1383, 3.9295]
Total_Simulation_Unloaded_Velocities_Variance=[14.4472, 14.7244, 13.3833, 13.4489, 12.9412, 11.5989, 13.0123, 14.5289, 12.8759, 11.4867, 12.9954, 12.3819, 14.1811, 13.8204, 14.6151, 13.0232, 12.8463, 12.9167, 12.5897, 14.1855, 11.894, 15.1553, 13.4129, 14.1839, 11.3744, 14.9892, 15.524, 13.303, 12.754, 16.3617, 10.5672, 14.5947, 13.9391, 12.4124, 14.934, 11.6979, 12.7817, 10.8732, 14.0064, 12.691, 12.0753, 14.3137, 12.8123, 13.9992, 12.1425, 11.759, 12.6877, 13.996, 12.8901, 12.0374, 11.6877, 12.3276, 14.7336, 14.4364, 14.064, 12.4135, 11.4166, 14.8257, 14.3785, 11.8792, 11.8829, 13.745, 14.4412, 13.8144, 11.5658, 12.0314, 13.8485, 11.8678, 16.695, 11.3797, 12.0486, 14.2326, 16.1122, 12.1741, 11.8032, 12.9382, 13.1971, 11.5495, 13.0574, 13.5484, 11.8096, 11.8057, 14.9419, 11.677, 12.5642, 13.853, 13.7044, 15.6023, 12.0358, 14.7734, 12.5604, 14.825, 13.4936, 11.7728, 12.8397, 13.7581, 12.7087, 10.9611, 10.1713, 14.6053, 13.0577, 12.0493, 13.8575, 13.5435, 12.9938, 12.9525, 12.3861, 12.4856, 13.3751, 12.9968, 12.3673, 13.453, 11.2027, 13.8769, 12.1204, 13.3331, 12.8316, 13.8645, 11.5388, 12.4206, 14.2107, 14.3511, 12.4135, 13.2047, 12.7404, 12.7084, 12.3221, 13.0673, 14.9963, 12.3494, 13.008, 13.2688, 13.033, 14.0091, 15.6579, 13.6134, 14.7363, 13.5521, 15.0048, 11.7656, 12.4234, 12.2246, 12.9742, 12.7071, 15.2222, 11.9788, 12.8036, 14.2849, 12.8436, 12.5512, 14.5508, 12.2369, 14.5481, 11.8716, 14.3728, 13.7034, 13.3686, 14.5793, 13.899, 14.4618, 14.2401, 11.4266, 10.0813, 12.0842, 13.2144, 16.223, 15.2871, 13.3133, 12.8993, 12.5576, 13.0988, 14.4113, 14.5587, 13.9632, 14.489, 11.6072, 13.3434, 13.8708, 13.3201, 13.5466, 12.6053, 14.6463, 12.6007, 13.3644, 10.4578, 13.3467, 13.4791, 13.7847, 13.7004, 11.6832, 13.5236, 14.6293, 13.3368, 12.2322, 12.7179, 13.7217, 14.0024, 10.9929, 13.2763, 12.1378, 12.3316, 13.7926, 13.0398, 13.3719, 11.7601, 12.5561, 13.468, 15.4594, 13.2325, 13.5702, 10.8035, 14.6597, 13.3918, 11.7915, 12.6325, 11.8685, 11.9868, 13.2925, 12.1349, 14.073, 9.6786, 10.2588, 11.327, 13.4739, 13.828, 13.5232, 13.3113, 12.0671, 13.6714, 12.0439, 14.6611, 10.7283, 12.9589, 13.4803, 13.8218, 11.688, 11.7699, 12.6468, 10.9445, 12.1529, 10.7628, 14.682, 15.162, 12.415, 10.6221, 13.5532, 14.3023, 11.3981, 13.7455, 12.3212, 10.7242, 11.5796, 13.1521, 13.9546, 12.3784, 13.8333, 13.1496, 11.8449, 10.7091, 13.0262, 15.2547, 14.3851, 11.2696, 12.3658, 12.0918, 11.4237, 13.3821, 11.5058, 13.1704, 12.8119, 13.9441, 11.4971, 13.0403, 14.5956, 12.9238, 13.3277, 11.9387, 12.5892, 11.2551, 14.18, 12.2298, 12.8543, 10.175, 12.9284, 13.9312, 14.247, 10.8051, 12.3818, 12.9249, 13.3963, 11.8758, 13.901, 12.4444, 11.5504, 13.2243, 12.7537, 12.3142, 12.2328, 15.1383, 13.2922, 13.7401, 11.6072, 12.8638, 12.2979, 11.3569, 13.5167, 12.9335, 11.7763, 12.6305, 12.4734, 13.2821, 12.5553, 11.6095, 13.7151, 12.3403, 14.0964, 12.5513, 12.1085, 14.497, 12.5431, 13.8651, 14.2418, 13.4794, 11.5446, 14.4772, 14.3538, 12.902, 14.4389, 12.2254, 13.0174, 12.7189, 11.2283, 16.4266, 14.2877, 13.274, 13.3442, 11.7998, 11.8071, 12.2476, 12.9946, 13.4045, 14.2061, 11.8925, 11.9463, 11.6152, 13.3, 13.934, 12.4457, 11.9955, 12.6857, 12.7713, 13.6601, 12.4982, 13.5314, 10.7638, 13.2168, 13.9311, 13.1282, 12.5825, 13.8105, 10.6948, 11.9478, 12.0696, 12.544, 14.7303, 11.867, 12.7734, 10.1664, 11.8138, 13.0135, 12.7148, 13.2783, 14.9094, 14.9425, 13.8889, 13.4636, 12.5665, 12.2251, 14.0799, 12.3869, 12.642, 12.9025, 12.4208, 14.5194, 14.0273, 14.7328, 13.223, 12.7578, 13.1849, 14.5044, 14.8414, 14.0951, 13.4133, 15.3038, 12.3146, 11.6783, 13.8695, 13.3856, 13.9359, 12.3204, 11.1187, 12.2641, 11.5791, 12.9796, 13.5585, 12.9072, 11.5983, 14.694, 13.6004, 12.8997, 14.1417, 12.0172, 12.5664, 13.6986, 15.6595, 12.6316, 13.8514, 13.3301, 14.1066, 14.5882, 12.1324, 12.2997, 14.5399, 12.2761, 14.0866, 11.0173, 12.8274, 14.01, 12.9124, 12.8299, 12.2785, 11.8064, 11.8602, 14.6331]
Total_Simulation_Loaded_ShovelRate_Variance=[0.0073, 0.0079, 0.011, 0.009, 0.0076, 0.0098, 0.0074, 0.0093, 0.0107, 0.0094, 0.013, 0.0081, 0.0115, 0.0101, 0.0085, 0.0108, 0.0103, 0.0079, 0.0077, 0.011, 0.0091, 0.0105, 0.0107, 0.0122, 0.0093, 0.0115, 0.0126, 0.0109, 0.0111, 0.0092, 0.0126, 0.0087, 0.0101, 0.0098, 0.0111, 0.0103, 0.0122, 0.0094, 0.0087, 0.011, 0.0107, 0.0124, 0.0101, 0.0077, 0.0087, 0.0109, 0.0081, 0.0079, 0.0106, 0.01, 0.0097, 0.0091, 0.008, 0.0099, 0.0101, 0.0093, 0.0107, 0.0114, 0.0086, 0.0085, 0.0101, 0.011, 0.011, 0.0071, 0.0086, 0.01, 0.0114, 0.0077, 0.0144, 0.0095, 0.0097, 0.012, 0.0097, 0.0085, 0.0114, 0.0127, 0.008, 0.0086, 0.0069, 0.0098, 0.0127, 0.0109, 0.0128, 0.008, 0.0136, 0.0094, 0.0082, 0.0072, 0.0093, 0.0112, 0.0094, 0.0109, 0.0085, 0.0104, 0.0087, 0.0126, 0.0148, 0.0122, 0.008, 0.0103, 0.0111, 0.0098, 0.0109, 0.0076, 0.0111, 0.0127, 0.0105, 0.0113, 0.0138, 0.006, 0.0114, 0.0097, 0.0098, 0.0095, 0.0087, 0.0106, 0.0079, 0.0102, 0.007, 0.0101, 0.0099, 0.0128, 0.011, 0.0103, 0.0099, 0.0101, 0.0098, 0.009, 0.0096, 0.0113, 0.0076, 0.0088, 0.0109, 0.0127, 0.0081, 0.0114, 0.0089, 0.0097, 0.0105, 0.009, 0.0115, 0.009, 0.0091, 0.0141, 0.0118, 0.0106, 0.0082, 0.0116, 0.0104, 0.0109, 0.0062, 0.0107, 0.0096, 0.0075, 0.0103, 0.0119, 0.008, 0.0087, 0.0085, 0.0101, 0.0088, 0.0111, 0.0116, 0.006, 0.0095, 0.0067, 0.0123, 0.0089, 0.01, 0.0109, 0.0084, 0.0109, 0.0078, 0.0093, 0.0111, 0.0128, 0.0121, 0.0085, 0.007, 0.0113, 0.0101, 0.0085, 0.012, 0.011, 0.0106, 0.0112, 0.0094, 0.012, 0.0117, 0.0078, 0.012, 0.0111, 0.0096, 0.0084, 0.0121, 0.0102, 0.0106, 0.0074, 0.0102, 0.0097, 0.0091, 0.0107, 0.0086, 0.0109, 0.0065, 0.0109, 0.0078, 0.0091, 0.0075, 0.0116, 0.0095, 0.0111, 0.0069, 0.0102, 0.01, 0.0117, 0.0083, 0.0088, 0.0091, 0.0069, 0.0093, 0.0115, 0.0105, 0.0106, 0.0111, 0.008, 0.0085, 0.0096, 0.0129, 0.0118, 0.0111, 0.006, 0.01, 0.0125, 0.0086, 0.0105, 0.0098, 0.0101, 0.0077, 0.0062, 0.009, 0.0095, 0.0094, 0.0129, 0.009, 0.0076, 0.011, 0.0109, 0.0121, 0.0093, 0.0111, 0.006, 0.012, 0.0089, 0.0096, 0.0109, 0.0085, 0.0103, 0.0096, 0.0085, 0.0095, 0.007, 0.012, 0.0097, 0.0086, 0.0109, 0.0086, 0.0099, 0.0112, 0.0091, 0.0097, 0.0096, 0.0079, 0.0099, 0.0125, 0.0115, 0.0106, 0.0089, 0.0104, 0.0107, 0.0071, 0.0109, 0.0117, 0.0099, 0.0083, 0.0098, 0.0103, 0.0119, 0.0104, 0.0099, 0.0103, 0.0159, 0.0092, 0.0089, 0.0101, 0.0101, 0.0121, 0.0114, 0.0097, 0.0089, 0.0081, 0.0104, 0.0116, 0.0092, 0.0116, 0.0067, 0.0065, 0.0108, 0.0158, 0.0111, 0.0109, 0.0074, 0.0089, 0.0092, 0.0094, 0.0119, 0.0086, 0.0103, 0.0118, 0.0066, 0.0106, 0.0105, 0.0101, 0.0083, 0.0089, 0.0109, 0.0105, 0.012, 0.0093, 0.0093, 0.0069, 0.0109, 0.0076, 0.0073, 0.0105, 0.0086, 0.0093, 0.0118, 0.0118, 0.0119, 0.0094, 0.0086, 0.0111, 0.0098, 0.0082, 0.0121, 0.0115, 0.0105, 0.0122, 0.0075, 0.0068, 0.0072, 0.0121, 0.0105, 0.011, 0.0115, 0.0094, 0.0108, 0.0086, 0.0094, 0.0081, 0.0087, 0.0089, 0.0113, 0.0091, 0.0111, 0.0109, 0.0078, 0.0085, 0.0108, 0.008, 0.0126, 0.0094, 0.0101, 0.0122, 0.0068, 0.008, 0.0063, 0.0122, 0.014, 0.0104, 0.0154, 0.008, 0.0152, 0.0077, 0.0091, 0.0102, 0.0081, 0.0117, 0.0092, 0.0088, 0.0087, 0.0108, 0.0113, 0.0087, 0.0102, 0.0122, 0.0087, 0.0088, 0.0086, 0.0084, 0.012, 0.0079, 0.0145, 0.0098, 0.0102, 0.0108, 0.0107, 0.0119, 0.01, 0.0071, 0.0091, 0.0111, 0.0102, 0.0082, 0.0085, 0.0087, 0.0088, 0.0103, 0.0099, 0.0084, 0.0102, 0.009, 0.0106, 0.0114, 0.0095, 0.0099, 0.0092, 0.0104, 0.0075, 0.0089, 0.0087, 0.0068, 0.012]
Total_Simulation_UnLoaded_ShovelRate_Variance=[0.011, 0.0089, 0.0115, 0.0097, 0.0107, 0.0104, 0.0087, 0.0097, 0.009, 0.008, 0.0101, 0.0077, 0.0116, 0.0094, 0.0124, 0.0075, 0.0101, 0.01, 0.0086, 0.0092, 0.0086, 0.0104, 0.0092, 0.009, 0.0083, 0.012, 0.011, 0.0095, 0.0089, 0.0105, 0.0096, 0.0124, 0.0087, 0.0095, 0.0094, 0.0087, 0.0086, 0.0101, 0.0101, 0.009, 0.0109, 0.0076, 0.0072, 0.0082, 0.0082, 0.01, 0.0087, 0.012, 0.0104, 0.0086, 0.0085, 0.0089, 0.0103, 0.0095, 0.0092, 0.0094, 0.0095, 0.0127, 0.0105, 0.0092, 0.0106, 0.0081, 0.0105, 0.0083, 0.0093, 0.0089, 0.0083, 0.0102, 0.0083, 0.0097, 0.0107, 0.0095, 0.0088, 0.0099, 0.0102, 0.0074, 0.0098, 0.009, 0.0116, 0.0101, 0.0113, 0.0099, 0.01, 0.0094, 0.0106, 0.0094, 0.0081, 0.0095, 0.01, 0.0093, 0.0091, 0.0085, 0.0111, 0.0093, 0.0092, 0.0085, 0.0096, 0.0099, 0.0103, 0.0101, 0.0116, 0.0089, 0.0109, 0.0086, 0.0101, 0.0097, 0.0106, 0.0081, 0.0079, 0.0115, 0.0085, 0.0088, 0.01, 0.0089, 0.0077, 0.0087, 0.0104, 0.0123, 0.0094, 0.0084, 0.0088, 0.01, 0.0085, 0.0099, 0.0115, 0.0081, 0.0093, 0.0086, 0.0102, 0.0104, 0.0091, 0.0112, 0.0109, 0.0093, 0.0094, 0.0092, 0.0097, 0.0094, 0.0101, 0.0107, 0.0076, 0.0095, 0.0073, 0.0093, 0.0096, 0.0098, 0.0092, 0.0107, 0.0099, 0.0115, 0.0104, 0.0117, 0.0102, 0.011, 0.0109, 0.0106, 0.0105, 0.0106, 0.0077, 0.0092, 0.01, 0.0129, 0.0099, 0.0088, 0.0102, 0.008, 0.0081, 0.0113, 0.0105, 0.0093, 0.0079, 0.0092, 0.0098, 0.0092, 0.0096, 0.009, 0.0091, 0.012, 0.0099, 0.0096, 0.0093, 0.0093, 0.011, 0.0105, 0.0084, 0.0087, 0.0084, 0.0091, 0.0094, 0.0107, 0.008, 0.0075, 0.0104, 0.0076, 0.0122, 0.0094, 0.0095, 0.0109, 0.009, 0.0123, 0.0136, 0.011, 0.0103, 0.0111, 0.0096, 0.0103, 0.01, 0.0107, 0.0075, 0.0072, 0.0104, 0.0116, 0.0082, 0.0102, 0.0082, 0.0103, 0.0102, 0.0085, 0.0093, 0.0114, 0.0105, 0.0099, 0.0123, 0.01, 0.0084, 0.0083, 0.0097, 0.0083, 0.0095, 0.0104, 0.0117, 0.0106, 0.0106, 0.008, 0.0088, 0.0091, 0.0123, 0.0089, 0.0076, 0.0088, 0.0103, 0.011, 0.0111, 0.0102, 0.009, 0.0101, 0.0105, 0.0081, 0.011, 0.0097, 0.0109, 0.0108, 0.0088, 0.0106, 0.0095, 0.0081, 0.0124, 0.0118, 0.0082, 0.0096, 0.0114, 0.0087, 0.0117, 0.0104, 0.0086, 0.009, 0.0109, 0.011, 0.0083, 0.0086, 0.0095, 0.0104, 0.009, 0.0084, 0.0098, 0.0097, 0.0102, 0.0102, 0.0109, 0.0091, 0.0104, 0.0076, 0.0103, 0.0098, 0.009, 0.0105, 0.0096, 0.0088, 0.0122, 0.0072, 0.0102, 0.0097, 0.01, 0.0097, 0.0108, 0.0089, 0.008, 0.0111, 0.0102, 0.0096, 0.01, 0.0108, 0.011, 0.0092, 0.011, 0.0108, 0.0087, 0.0084, 0.0106, 0.0114, 0.0099, 0.0103, 0.01, 0.0122, 0.0097, 0.0092, 0.0095, 0.0097, 0.0092, 0.0086, 0.0108, 0.0094, 0.0093, 0.009, 0.009, 0.0084, 0.0088, 0.0101, 0.0104, 0.0121, 0.0092, 0.0096, 0.0092, 0.0111, 0.0082, 0.0089, 0.0091, 0.0074, 0.0115, 0.0127, 0.0089, 0.0087, 0.012, 0.0109, 0.0101, 0.0091, 0.009, 0.0094, 0.0078, 0.0109, 0.0093, 0.0091, 0.0097, 0.0089, 0.0098, 0.0081, 0.0096, 0.0083, 0.0112, 0.0086, 0.0073, 0.01, 0.0105, 0.0114, 0.0091, 0.0122, 0.0099, 0.0096, 0.0102, 0.0111, 0.0086, 0.0098, 0.0106, 0.0093, 0.0111, 0.0069, 0.0095, 0.0083, 0.0108, 0.0082, 0.0107, 0.0082, 0.0119, 0.0119, 0.009, 0.008, 0.0095, 0.0093, 0.0098, 0.0075, 0.0104, 0.0114, 0.0123, 0.0092, 0.0116, 0.0093, 0.0113, 0.0076, 0.0094, 0.0102, 0.0084, 0.0095, 0.0083, 0.0115, 0.0094, 0.0089, 0.0087, 0.0119, 0.0099, 0.0102, 0.0111, 0.0097, 0.0091, 0.0105, 0.0086, 0.0091, 0.0088, 0.0125, 0.0098, 0.0073, 0.01, 0.009, 0.0097, 0.0096, 0.0097, 0.0087, 0.0102, 0.0085, 0.0106, 0.0111, 0.0102, 0.0082, 0.0096, 0.0106]

print(len(Total_Simulation_Time))
print("\n")








X1 = np.array(Total_Simulation_Loaded_Velocities )
X2 = np.array(Total_Simulation_Unloaded_Velocities)
X3 = np.array(Total_Simulation_Loaded_ShovelRate)
X4 = np.array(Total_Simulation_UnLoaded_ShovelRate)

a,b,c,d = 1/X1,1/X2,1/X3,1/X4


# print(a)

# Generating a dependent variable (with some noise)
y = np.array(Total_Simulation_Time)

# Creating a DataFrame
# df = pd.DataFrame({'X1': a, 'X2': b, 'X3': c, 'X4': d, 'y': y})

# Splitting data into training and testing sets
X = np.array([[x1,x2,x3,x4] for x1,x2,x3,x4 in zip(a,b,c,d)])


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# print(f'Length {len(X_test),len(y_test)}')
# Performing multiple linear regression
model = LinearRegression()
model.fit(X_train, y_train)

y_train_pred = model.predict(X_train)
y_test_pred = model.predict(X_test)

# Model parameters
coefficients = model.coef_
intercept = model.intercept_

# Displaying the regression equation
equation = f"T = {intercept:.2f} + ({coefficients[0]:.2f} / Loaded Velocity) + ({coefficients[1]:.2f} /Unloaded_Velocity) + ({coefficients[2]:.2f} / Loaded Shovel Rate) + ({coefficients[3]:.2f} /UnLoaded Shovel Rate)"
print("Regression Equation:", equation)
print("\n")

# Predictions
# y_pred = model.predict(X_test)

# Residual errors
residuals = y_test - y_test_pred

# Plotting residuals
# plt.figure(figsize=(8, 5))
# sns.histplot(residuals, bins=20, kde=True, color="blue")
# plt.axvline(x=0, color='red', linestyle='dashed')
# plt.title("Residual Error Distribution")
# plt.xlabel("Residuals")
# plt.ylabel("Frequency")
# plt.show()

# Plotting Observed vs. Predicted Values
# plt.figure(figsize=(8, 5))
# plt.scatter(y_test, y_test_pred, color='blue', alpha=0.7)
# plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], 'r', linestyle="dashed")
# plt.xlabel("Observed T in s")
# plt.ylabel("Predicted T in s")
# plt.title("Observed vs Predicted Values")
# plt.show()

# Performance metrics
train_r2 = r2_score(y_train, y_train_pred)
test_r2 = r2_score(y_test, y_test_pred)
train_mse = mean_squared_error(y_train, y_train_pred)
test_mse = mean_squared_error(y_test, y_test_pred)

print(f"Train R²: {train_r2:.3f}, Test R²: {test_r2:.3f}")
print(f"Train MSE: {train_mse:.3f}, Test MSE: {test_mse:.3f}")
print("\n")

X_train_sm = sm.add_constant(X_train)
model_sm = sm.OLS(y_train,X_train_sm)
results = model_sm.fit()
print(results.summary())

conf_interval = results.conf_int(alpha = 0.05)
# print("Confidence Interval for coefficients:",conf_interval)

conf_interval_df = pd.DataFrame(conf_interval,columns = ["Lower Bound","Upper Bound"])
conf_interval_df.index = ["Intercept","Loaded_Velocities","Unloaded_Velocities","Loaded_Shovel_Rate","UnLoaded_Shovel_Rate"]
print("Confidence interval (95%) for Model Coefficients:")
print(conf_interval_df.to_string())
print("\n")

# std_error = np.std(residuals)
# lower_bound = y_test_pred - 1.96 * std_error
# upper_bound = y_test_pred + 1.96 * std_error

# prediction_interval_df = pd.DataFrame({"Observed":y_test,"Predicted":y_test_pred,
# "Lower Bound (95% PI)": lower_bound, "Upper Bound (95% PI)": upper_bound})
# print("Prediction interval (95%) for Each Observation")
# print(prediction_interval_df.head(10).to_string())

X_test_sm = sm.add_constant(X_test)

# Get prediction and its standard error
prediction = results.get_prediction(X_test_sm)
prediction_summary_frame = prediction.summary_frame(alpha=0.05)
print("prediction summary",type(prediction_summary_frame["obs_ci_lower"]))

# Create DataFrame with prediction intervals
prediction_interval_df = pd.DataFrame({
    "Observed": y_test,
    "Predicted": prediction_summary_frame["mean"],
    "Lower Bound (95% PI)": prediction_summary_frame["obs_ci_lower"],
    "Upper Bound (95% PI)": prediction_summary_frame["obs_ci_upper"]
})

a=[]
for i in range(len(X_test)):
   x = X_train[i]
   a.append(x[0])
print(f'This is good{len(a)}')

print("Prediction interval (95%) for Each Observation")
print(prediction_interval_df.head(10).to_string())
print("Shape of X_test:",X_test.shape)
print(X_test[0])
# X_test=X_test.reshape(-1,X_test.shape[-1])
print("First few rows of X_test:\n",X_test[:5])
# Plot the data


# plt.scatter(a,y_test, label='Data')
# print("Fitted Values",len(results.fittedvalues))
# # plt.plot(a, results.fittedvalues, color='red', label='Fitted Line')
# plt.fill_between(a, conf_interval["mean_ci_lower"],conf_interval["mean_ci_upper"] , color='red', alpha=0.3, label='95% CI')
# plt.fill_between(a, prediction_summary_frame["obs_ci_lower"], prediction_summary_frame["obs_ci_upper"], color='blue', alpha=0.2, label='95% PI')

# plt.xlabel('X')
# plt.ylabel('Y')
# plt.legend()
# plt.show()





# print("Prediction Interval Lower Bound",lower_bound)
# print('Prediction Interval Upper Bound:',upper_bound)

feature_names = ["1/LoadedVelocity","1/UnloadedVelocity","1/LoadedShovel Rate","1/UnloadedShovelRate"]

X_train= pd.DataFrame(X_train,columns=feature_names)
X_test= pd.DataFrame(X_test,columns=feature_names)

explainer = shap.Explainer(model,X_train)
shap_values = explainer(X_test)
# print(shap_values)


# ✅ SHAP Summary Plot (Global feature importance)
# shap.summary_plot(shap_values, X_test,feature_names = feature_names)

# shap.initjs()
# shap.force_plot(explainer.expected_value,shap_values[9].values.round(3),X_test.iloc[9].round(3),feature_names = feature_names,matplotlib = True,show = False,text_rotation=25)
# plt.gcf().set_size_inches(15,6)
# plt.xticks(rotation =45)

# plt.savefig('force_plot.png',bbox_inches ='tight',dpi = 300)
# plt.close()

# fig,ax = plt.subplots(figsize=(12,8))
# shap.plots.beeswarm(shap_values,show = False)
# plt.subplots_adjust(left=0.4)
# ax.set_yticks(range(len(feature_names)))
# ax.set_yticklabels(feature_names)
# plt.show()





# shap.decision_plot(explainer.expected_value,shap_values.values,feature_order='importance',feature_names = feature_names,show = False)
# plt.savefig('decision_plot.png', dpi=100, bbox_inches='tight')

# print(f'Shap_Values{len(shap_values)}')
# print(type(shap_values[9]))
# print(shap_values[9])


# try:
#     shap.plots.waterfall(shap_values[9], show=False)
#     plt.savefig('waterfall', dpi=100, bbox_inches='tight')
# except IndexError as e:
#     print(f"Error: {e}. Trying with shap_values[0] instead.")

# shap.plots.waterfall(shap_values[9],show = False)

# plt.savefig('waterfallplot', dpi=100, bbox_inches='tight')

# print(shap_values[9])

# shap.plots.heatmap(shap_values,show=False)
# plt.savefig('heatmap.png', dpi=100, bbox_inches='tight')
# shap.plots.bar(shap_values,show = False)
# plt.savefig('barplot', dpi=100, bbox_inches='tight')



# SHAP Summary Plot
shap.summary_plot(shap_values, X_test, feature_names=feature_names)
plt.title("SHAP Summary Plot")
plt.show()

# # SHAP Dependence Plot
# for i, feature in enumerate(feature_names):
#     shap.dependence_plot(feature, shap_values.values, X_test,interaction_index = None, feature_names=feature_names, show=False)
#     sanitized_feature = feature.replace("1/","_")
#     plt.savefig(f"dependence_plot_{sanitized_feature}.png", dpi=100, bbox_inches='tight')
#     plt.close()
#     # shap.dependence_plot(feature, shap_values.values, X_test, interaction_index = "1/UnloadedVelocity", show=False)
#     plt.title(f"SHAP Dependence Plot for {feature}")
    # plt.show()

# for i, feature in enumerate(feature_names):
#     for j,interaction_feature in enumerate(feature_names):
#         if i!=j:
#             shap.dependence_plot(feature,shap_values.values,X_test,interaction_index =interaction_feature,show = False)
#             feature1=feature.replace("1/","_")
#             feature2 = interaction_feature.replace("1/","_")
#             plt.savefig(f"depenedence_plot_{feature1}_vs_{feature2}.png",dpi=100,bbox_inches ='tight')
#             plt.close()


# SHAP Bar Plot
# shap.summary_plot(shap_values, X_test, feature_names=feature_names, plot_type="bar")
# plt.title("SHAP Bar Plot")
# plt.show()



# SHAP Heatmap Plot
# shap.plots.heatmap(shap_values, show=False)
# plt.title("SHAP Heatmap Plot")
# plt.show()

# print(len(shap_values))
# print(X_test.iloc[9])


# shap.dependence_plot(
#     feature_names[0],                         # Analyze the 'age' feature
#     shap_values,                   # SHAP values
#     X_train,                       # Training data
#     feature_names[1],# Color points by 'income' to check for interactions
#     show=False
# )

# plt.xlabel("Age")
# plt.ylabel("SHAP value for Age")
# plt.title("SHAP Dependence Plot for Age (colored by Income)")
# plt.show()