import numpy as np
import matplotlib.pyplot as plt

Total_Simulation_Loaded_Velocities=[4.13, 4.04, 3.92, 4.01, 3.78, 4.13, 4.04, 3.97, 4.17, 3.91, 4.04, 4.17, 4.1, 3.9, 3.94, 4.08, 4.17, 3.93, 4.05, 4.18, 4.11, 3.97, 4.25, 3.89, 3.97, 3.99, 4.23, 3.83, 4.01, 4.08, 4.26, 4.08, 4.09, 4.15, 4.15, 3.74, 4.21, 4.16, 4.0, 3.83, 3.81, 4.23, 4.04, 4.06, 3.97, 4.02, 4.14, 4.12, 4.1, 3.97, 4.05, 4.07, 3.94, 4.13, 4.23, 3.95, 3.86, 3.94, 4.08, 3.78, 4.21, 4.05, 4.05, 4.13, 4.04, 3.9, 4.32, 4.0, 4.06, 4.01, 3.99, 4.09, 3.91, 3.96, 4.01, 4.13, 4.04, 4.31, 4.07, 4.04, 4.12, 3.98, 4.29, 4.29, 4.3, 4.05, 3.95, 4.02, 3.98, 3.87, 4.0, 4.1, 3.88, 4.05, 4.03, 4.04, 3.93, 4.28, 4.24, 4.12, 3.9, 4.34, 4.05, 4.31, 3.97, 3.91, 4.22, 4.1, 4.0, 4.13, 4.05, 4.06, 4.13, 4.11, 4.15, 4.2, 4.08, 4.17, 4.0, 4.1, 4.06, 4.1, 3.92, 3.84, 4.29, 4.01, 4.04, 4.09, 3.87, 3.84, 4.07, 4.02, 4.14, 4.12, 4.06, 4.03, 4.05, 3.93, 3.98, 4.05, 4.16, 4.02, 3.98, 4.13, 4.12, 3.96, 4.29, 4.08, 3.89, 3.78, 4.04, 3.95, 4.2, 3.93, 4.01, 3.99, 3.87, 3.8, 4.17, 3.95, 4.08, 4.1, 3.96, 3.98, 4.04, 4.12, 4.07, 4.03, 4.16, 4.06, 4.15, 4.05, 3.92, 4.01, 4.19, 3.94, 3.95, 4.13, 4.04, 4.06, 3.96, 4.18, 3.94, 3.95, 4.1, 3.82, 3.98, 4.08, 3.97, 3.73, 4.11, 3.96, 4.06, 4.06, 3.9, 3.9, 4.08, 4.15, 4.08, 4.16, 4.06, 3.99, 4.11, 3.86, 4.09, 3.74, 4.05, 4.11, 3.92, 3.96, 4.18, 4.08, 4.07, 4.08, 3.96, 3.99, 4.09, 3.94, 3.82, 4.0, 4.08, 4.28, 3.92, 3.92, 3.95, 4.0, 4.14, 3.95, 3.77, 4.12, 3.99, 4.02, 3.94, 4.03, 4.08, 3.84, 4.05, 3.9, 3.97, 4.02, 4.2, 4.15, 4.08, 4.21, 3.86, 4.15, 4.28, 3.91, 4.15, 3.91, 4.04, 3.92, 4.23, 3.92, 4.01, 4.3, 3.89, 3.85, 4.03, 3.88, 3.89, 4.22, 3.91, 4.07, 3.73, 3.9, 4.11, 3.89, 4.07, 4.1, 3.94, 3.97, 3.78, 4.11, 4.13, 3.77, 3.97, 4.13, 4.06, 3.92, 4.27, 4.06, 4.16, 3.98, 4.05, 4.24, 4.03, 3.92, 4.19, 4.2, 4.1, 3.84, 3.99, 4.03, 3.87, 4.0, 3.78, 4.33, 4.04, 4.0, 3.91, 3.95, 3.94, 4.09, 3.75, 4.01, 3.82, 4.03, 4.07, 4.13, 4.07, 4.25, 3.75, 3.99, 4.31, 3.95, 4.16, 3.89, 4.07, 4.01, 4.05, 3.88, 4.0, 4.13, 4.02, 4.23, 4.0, 4.0, 4.03, 4.35, 3.94, 4.21, 3.97, 4.03, 4.0, 4.09, 3.94, 3.91, 3.92, 3.81, 4.19, 3.96, 4.13, 3.99, 3.99, 4.0, 4.32, 4.05, 3.84, 4.13, 4.13, 4.02, 4.15, 4.12, 3.98, 4.18, 3.89, 4.05, 4.08, 4.18, 4.02, 4.07, 3.92, 3.96, 4.11, 4.04, 4.06, 4.29, 4.17, 4.08, 4.13, 3.97, 3.88, 4.08, 4.02, 3.95, 3.99, 4.36, 4.06, 4.17, 3.79, 4.03, 3.93, 3.97, 4.05, 4.15, 3.92, 3.97, 3.93, 3.97, 3.99, 4.04, 4.13, 3.93, 3.84, 4.06, 4.07, 3.9, 3.87, 4.06, 3.88, 4.15, 4.15, 3.96, 4.22, 3.97, 3.99, 3.92, 4.02, 4.01, 4.12, 3.94, 4.14, 4.03, 3.93, 4.15, 4.0, 3.84, 3.98, 3.77, 4.23, 3.78, 4.1, 4.17, 4.18, 4.17, 4.17, 4.07, 4.34, 4.29, 3.97, 3.93, 4.17, 4.04]
Total_Simulation_Unloaded_Velocities=[6.2, 6.68, 5.99, 6.67, 5.81, 6.25, 6.07, 6.57, 6.67, 6.34, 6.02, 6.22, 6.04, 6.47, 6.4, 6.36, 6.03, 6.19, 6.22, 6.5, 6.1, 6.6, 6.49, 6.05, 5.89, 6.47, 6.7, 6.6, 6.18, 6.79, 6.29, 6.18, 6.28, 6.08, 6.28, 6.36, 6.2, 6.55, 6.48, 5.86, 5.62, 6.4, 6.31, 6.49, 6.14, 6.35, 6.17, 6.34, 5.94, 6.5, 6.04, 6.46, 6.04, 6.77, 6.6, 6.31, 5.97, 6.21, 6.7, 5.9, 6.21, 6.02, 6.01, 6.13, 6.15, 6.34, 6.2, 6.25, 6.19, 5.84, 6.38, 6.06, 6.22, 6.22, 6.42, 5.99, 6.25, 6.19, 6.24, 6.25, 6.48, 6.05, 6.67, 6.47, 6.13, 6.09, 6.44, 6.37, 5.94, 7.06, 6.07, 5.89, 5.83, 6.13, 6.65, 6.15, 6.26, 6.11, 5.92, 6.58, 5.91, 6.24, 6.04, 6.24, 6.19, 5.98, 6.15, 6.33, 6.39, 6.5, 5.86, 6.67, 6.16, 6.19, 6.07, 5.92, 6.38, 6.24, 6.2, 6.37, 6.2, 6.33, 6.1, 6.28, 6.14, 6.01, 6.28, 5.98, 6.13, 6.3, 6.11, 6.17, 5.9, 6.2, 6.31, 6.58, 6.34, 6.46, 6.28, 6.04, 6.16, 5.68, 6.28, 5.88, 6.66, 6.17, 6.33, 6.17, 6.36, 6.36, 6.7, 6.84, 6.46, 6.12, 6.48, 5.99, 6.56, 6.23, 6.29, 6.14, 6.31, 6.03, 5.73, 6.18, 6.3, 6.61, 6.29, 5.92, 6.32, 6.47, 6.08, 6.37, 6.24, 6.46, 6.33, 5.91, 6.45, 6.51, 6.17, 5.86, 6.35, 6.19, 6.01, 6.28, 6.13, 6.46, 6.27, 6.1, 6.16, 6.02, 6.2, 6.39, 5.96, 5.68, 6.18, 6.38, 6.37, 6.06, 6.1, 5.85, 6.44, 6.27, 5.86, 6.4, 6.12, 6.04, 6.31, 6.5, 6.18, 6.6, 6.28, 6.23, 6.34, 6.07, 5.92, 5.92, 6.07, 5.95, 6.18, 6.57, 6.15, 6.32, 5.92, 6.11, 6.11, 6.07, 6.05, 6.18, 6.28, 5.91, 6.38, 6.12, 5.78, 6.49, 6.1, 6.3, 6.17, 5.88, 6.16, 6.16, 5.84, 6.38, 6.59, 6.12, 5.75, 6.44, 6.34, 6.27, 6.23, 5.95, 6.15, 6.26, 6.18, 6.21, 6.51, 6.27, 6.4, 6.29, 6.66, 6.23, 5.99, 6.27, 6.08, 6.08, 5.93, 6.5, 6.2, 5.96, 6.08, 5.98, 6.57, 6.3, 6.05, 5.92, 6.64, 6.46, 6.0, 5.53, 5.58, 6.56, 6.49, 5.98, 6.29, 6.09, 6.45, 6.32, 6.14, 5.93, 6.31, 6.43, 6.04, 6.07, 6.28, 6.32, 5.65, 6.17, 6.14, 6.96, 6.26, 5.92, 6.52, 6.47, 6.52, 6.32, 5.95, 6.28, 6.46, 6.05, 6.5, 6.14, 6.26, 6.03, 5.72, 6.26, 6.33, 6.22, 6.61, 6.51, 6.21, 6.29, 6.29, 6.84, 6.44, 6.4, 6.53, 6.26, 6.52, 6.28, 6.81, 6.02, 5.99, 5.91, 6.44, 6.26, 6.22, 5.97, 6.18, 6.15, 6.25, 6.06, 6.44, 6.49, 6.24, 6.1, 6.07, 6.1, 6.6, 5.97, 6.1, 6.1, 6.01, 6.43, 6.3, 6.16, 6.04, 5.83, 6.66, 6.37, 6.61, 6.5, 6.74, 6.29, 6.06, 5.96, 6.45, 5.99, 6.51, 6.71, 6.04, 6.36, 6.56, 6.09, 6.5, 6.12, 6.49, 6.23, 6.27, 5.86, 6.15, 6.24, 6.02, 6.23, 6.21, 6.52, 6.31, 6.3, 6.52, 6.33, 6.2, 6.14, 5.98, 6.25, 6.32, 6.55, 6.28, 6.36, 6.32, 6.01, 6.05, 6.34, 6.37, 6.53, 5.87, 5.89, 6.27, 6.65, 6.38, 6.2, 6.34, 6.1, 6.06, 6.26, 6.67, 6.24, 6.16, 6.17, 6.37, 6.71, 6.24, 6.4, 5.74, 6.42, 6.55, 5.87, 6.46, 6.32, 6.16, 6.31, 6.79, 6.35, 6.21, 6.34, 6.0, 6.23]
Total_Simulation_Loaded_ShovelRate=[0.5028, 0.5046, 0.4901, 0.5076, 0.4907, 0.4804, 0.4903, 0.4985, 0.5195, 0.5141, 0.5032, 0.4955, 0.4935, 0.4818, 0.5136, 0.4994, 0.4984, 0.5088, 0.5145, 0.5009, 0.5054, 0.5018, 0.4889, 0.5039, 0.4976, 0.5056, 0.4832, 0.492, 0.5072, 0.4962, 0.5226, 0.5021, 0.5044, 0.507, 0.5076, 0.4959, 0.515, 0.5101, 0.5011, 0.4899, 0.484, 0.4876, 0.492, 0.4944, 0.472, 0.4925, 0.4877, 0.4906, 0.4761, 0.4956, 0.4871, 0.4834, 0.5106, 0.507, 0.5039, 0.4981, 0.5221, 0.5143, 0.5029, 0.5163, 0.5085, 0.5033, 0.5048, 0.5225, 0.5091, 0.5057, 0.5055, 0.5122, 0.5102, 0.5134, 0.5005, 0.51, 0.5107, 0.4904, 0.5003, 0.4872, 0.4993, 0.5102, 0.506, 0.5042, 0.4864, 0.5023, 0.5137, 0.4919, 0.5092, 0.5052, 0.4849, 0.4888, 0.5141, 0.4949, 0.4788, 0.4911, 0.4829, 0.5123, 0.5211, 0.4875, 0.5349, 0.5071, 0.5222, 0.5011, 0.501, 0.5006, 0.5021, 0.5073, 0.4806, 0.5162, 0.5022, 0.4877, 0.5028, 0.4975, 0.5081, 0.4856, 0.5159, 0.5083, 0.4979, 0.5048, 0.5019, 0.4951, 0.503, 0.5128, 0.4971, 0.5079, 0.5306, 0.5127, 0.4796, 0.5126, 0.5058, 0.4974, 0.5255, 0.5111, 0.4961, 0.5011, 0.4854, 0.5069, 0.5081, 0.5051, 0.4849, 0.4929, 0.5161, 0.4917, 0.5137, 0.5062, 0.4954, 0.5142, 0.5158, 0.48, 0.4994, 0.5109, 0.508, 0.4981, 0.5049, 0.5101, 0.5125, 0.5013, 0.4959, 0.4751, 0.4917, 0.4899, 0.4861, 0.495, 0.5053, 0.5028, 0.5089, 0.5001, 0.532, 0.4994, 0.4859, 0.4958, 0.496, 0.4858, 0.4877, 0.5144, 0.5057, 0.503, 0.4951, 0.4825, 0.5004, 0.4888, 0.5102, 0.4864, 0.5015, 0.5106, 0.4997, 0.5142, 0.5052, 0.4785, 0.4915, 0.5059, 0.464, 0.499, 0.4981, 0.5165, 0.511, 0.5022, 0.4903, 0.4976, 0.504, 0.4938, 0.512, 0.4886, 0.4851, 0.4787, 0.4939, 0.5145, 0.4895, 0.4943, 0.4921, 0.4951, 0.489, 0.5055, 0.5032, 0.4804, 0.4971, 0.512, 0.5076, 0.5257, 0.5168, 0.4776, 0.4912, 0.4951, 0.4727, 0.4883, 0.5111, 0.5208, 0.5032, 0.509, 0.497, 0.4804, 0.5049, 0.4993, 0.5004, 0.52, 0.4874, 0.5102, 0.5175, 0.5039, 0.5018, 0.5007, 0.5043, 0.5154, 0.4774, 0.4799, 0.5147, 0.4926, 0.5069, 0.5045, 0.487, 0.4908, 0.5146, 0.528, 0.5068, 0.4922, 0.5182, 0.4942, 0.4948, 0.504, 0.5105, 0.5283, 0.4728, 0.518, 0.4962, 0.4958, 0.5133, 0.5052, 0.481, 0.4999, 0.4909, 0.5066, 0.5054, 0.5015, 0.501, 0.4879, 0.4739, 0.4991, 0.4919, 0.4897, 0.4982, 0.4954, 0.494, 0.4908, 0.5194, 0.5284, 0.4954, 0.5085, 0.51, 0.5176, 0.5059, 0.491, 0.4954, 0.5244, 0.5088, 0.5137, 0.4843, 0.514, 0.4975, 0.4821, 0.5044, 0.5091, 0.5084, 0.5061, 0.5089, 0.4848, 0.5039, 0.4936, 0.4989, 0.5193, 0.4882, 0.522, 0.5192, 0.5248, 0.5127, 0.5041, 0.5078, 0.4967, 0.505, 0.4915, 0.5078, 0.5073, 0.4816, 0.5131, 0.5017, 0.4994, 0.5033, 0.5097, 0.493, 0.5103, 0.4803, 0.4864, 0.495, 0.5096, 0.4828, 0.5004, 0.4857, 0.5025, 0.4921, 0.5066, 0.4922, 0.4917, 0.4897, 0.4837, 0.4896, 0.5015, 0.5094, 0.4999, 0.525, 0.4954, 0.4907, 0.5192, 0.507, 0.5022, 0.4866, 0.5106, 0.4844, 0.5091, 0.4858, 0.5097, 0.5192, 0.5077, 0.5092, 0.4958, 0.4899, 0.4896, 0.4865, 0.5114, 0.5156, 0.4968, 0.4976, 0.4803, 0.523, 0.5187, 0.5249, 0.5234, 0.4976, 0.5211, 0.521, 0.4994, 0.4978, 0.4936, 0.4969, 0.5089, 0.5072, 0.5042, 0.5032, 0.4821, 0.5017, 0.5066, 0.4971, 0.5195, 0.5223, 0.485, 0.5094, 0.516, 0.4749, 0.4991, 0.5108, 0.4935, 0.5004, 0.5076, 0.4878, 0.4957, 0.4949, 0.4917, 0.4832, 0.4855, 0.4694, 0.5042, 0.5019, 0.5361, 0.4939, 0.4926, 0.4902, 0.5124, 0.5086, 0.4951, 0.5263, 0.4959, 0.4906, 0.511, 0.5033, 0.5082, 0.5, 0.5139, 0.4936, 0.4984, 0.5128, 0.5017, 0.5038, 0.4881, 0.5092, 0.5149, 0.506, 0.501, 0.4949, 0.4918]
Total_Simulation_UnLoaded_ShovelRate=[0.2508, 0.2566, 0.2348, 0.2457, 0.2588, 0.267, 0.2609, 0.2461, 0.2557, 0.2478, 0.2473, 0.2524, 0.2556, 0.2456, 0.2533, 0.2467, 0.2565, 0.2507, 0.2521, 0.255, 0.2488, 0.244, 0.2395, 0.2417, 0.254, 0.2551, 0.2582, 0.2576, 0.244, 0.2544, 0.2579, 0.2597, 0.2417, 0.2602, 0.2647, 0.2359, 0.268, 0.2395, 0.2512, 0.2477, 0.2654, 0.2575, 0.2505, 0.2454, 0.2626, 0.2577, 0.2486, 0.2646, 0.269, 0.2577, 0.2584, 0.2437, 0.2587, 0.2594, 0.2539, 0.2523, 0.2647, 0.2621, 0.249, 0.2471, 0.2396, 0.2473, 0.2522, 0.2603, 0.2434, 0.243, 0.2456, 0.2697, 0.2519, 0.254, 0.2414, 0.2368, 0.2509, 0.2583, 0.2561, 0.2476, 0.2558, 0.2599, 0.2463, 0.2463, 0.25, 0.2499, 0.2572, 0.2512, 0.2449, 0.2584, 0.2448, 0.2503, 0.2536, 0.2572, 0.248, 0.2494, 0.2498, 0.2476, 0.2705, 0.2638, 0.2616, 0.2506, 0.2398, 0.2453, 0.2462, 0.246, 0.2462, 0.2377, 0.259, 0.2414, 0.2568, 0.2405, 0.2531, 0.2452, 0.2515, 0.2346, 0.2451, 0.2447, 0.2599, 0.2493, 0.2357, 0.2616, 0.2606, 0.2416, 0.2572, 0.2501, 0.246, 0.2597, 0.2497, 0.25, 0.2533, 0.2377, 0.2484, 0.2448, 0.2418, 0.2469, 0.254, 0.2645, 0.2512, 0.2448, 0.2565, 0.2607, 0.2498, 0.2443, 0.2531, 0.2381, 0.2302, 0.2526, 0.2483, 0.2614, 0.2501, 0.2649, 0.2446, 0.2708, 0.2451, 0.2558, 0.2395, 0.2383, 0.2424, 0.2452, 0.2438, 0.2601, 0.2466, 0.2334, 0.2542, 0.2581, 0.2564, 0.2484, 0.2384, 0.259, 0.2569, 0.2334, 0.2494, 0.2548, 0.2539, 0.2392, 0.2717, 0.2442, 0.2463, 0.2505, 0.2425, 0.2437, 0.2555, 0.2492, 0.2467, 0.2474, 0.2529, 0.2632, 0.2619, 0.2489, 0.2397, 0.244, 0.2472, 0.2482, 0.2526, 0.2508, 0.2487, 0.2491, 0.2577, 0.2453, 0.257, 0.2558, 0.2622, 0.2618, 0.2555, 0.2409, 0.248, 0.2633, 0.246, 0.2614, 0.2511, 0.2543, 0.2555, 0.2406, 0.2536, 0.2536, 0.2497, 0.2367, 0.2526, 0.2701, 0.2435, 0.2675, 0.2545, 0.2435, 0.2402, 0.2464, 0.2336, 0.2418, 0.2596, 0.2426, 0.2344, 0.2531, 0.2488, 0.2531, 0.2383, 0.2396, 0.2739, 0.2625, 0.2654, 0.2523, 0.2396, 0.2562, 0.2493, 0.2681, 0.2523, 0.2615, 0.2543, 0.2539, 0.267, 0.2646, 0.2725, 0.261, 0.2617, 0.228, 0.2442, 0.2469, 0.2621, 0.2458, 0.243, 0.2502, 0.2579, 0.2501, 0.2533, 0.2586, 0.2539, 0.2615, 0.2426, 0.2504, 0.2572, 0.2492, 0.2499, 0.2383, 0.2524, 0.2341, 0.2443, 0.2496, 0.2534, 0.255, 0.2578, 0.2551, 0.2564, 0.2386, 0.2596, 0.2445, 0.2543, 0.2631, 0.243, 0.2476, 0.2416, 0.2455, 0.2501, 0.2516, 0.2326, 0.2473, 0.2483, 0.2489, 0.2643, 0.2515, 0.2521, 0.2517, 0.2564, 0.2567, 0.2456, 0.2356, 0.2371, 0.2497, 0.2581, 0.2606, 0.258, 0.2557, 0.2375, 0.2362, 0.2387, 0.2406, 0.234, 0.2482, 0.2401, 0.2585, 0.2347, 0.2433, 0.2507, 0.2612, 0.245, 0.2574, 0.2347, 0.2485, 0.2608, 0.245, 0.2422, 0.2653, 0.2498, 0.2516, 0.2452, 0.2459, 0.2444, 0.2548, 0.2586, 0.2488, 0.2432, 0.249, 0.2388, 0.2509, 0.2578, 0.2526, 0.2438, 0.2636, 0.2441, 0.2405, 0.255, 0.2387, 0.2616, 0.2609, 0.2542, 0.2472, 0.2444, 0.2762, 0.251, 0.2417, 0.2359, 0.2479, 0.2726, 0.2432, 0.2465, 0.2395, 0.2474, 0.239, 0.2489, 0.2455, 0.2496, 0.2539, 0.2776, 0.2482, 0.2558, 0.2334, 0.2597, 0.251, 0.2533, 0.27, 0.2463, 0.2464, 0.2502, 0.2528, 0.2498, 0.2514, 0.2417, 0.2484, 0.2634, 0.2406, 0.2634, 0.2535, 0.2475, 0.2376, 0.2661, 0.2561, 0.2513, 0.2334, 0.2507, 0.2597, 0.2508, 0.2661, 0.2452, 0.2411, 0.2401, 0.2538, 0.2417, 0.2487, 0.2661, 0.255, 0.2629, 0.2405, 0.2553, 0.243, 0.2475, 0.2606, 0.2535, 0.2452, 0.245, 0.2361, 0.248, 0.2518, 0.2406, 0.2442, 0.2492, 0.2585, 0.2445, 0.2577, 0.2556, 0.2456, 0.2444, 0.2367, 0.2435, 0.2561, 0.2466, 0.2422, 0.2523, 0.2441, 0.2377, 0.2554]


# Given baseline values
VL_base = np.mean(Total_Simulation_Loaded_Velocities)
VU_base = np.mean(Total_Simulation_Unloaded_Velocities)
SL_base = np.mean(Total_Simulation_Loaded_ShovelRate)
SU_base = np.mean(Total_Simulation_UnLoaded_ShovelRate)

# Function to compute T
def compute_T(VL, VU, SL, SU):
    return 1.03 + (28.28 / VL) + (24.15 / VU) + (1.68 / SL) + (2.28 / SU)

# Compute baseline T
T_base = compute_T(VL_base, VU_base, SL_base, SU_base)
# print(T_base)

# Define percentage changes from -80% to +80%
percent_changes = np.arange(-0.8, 0.9, 0.1)

# Compute T values for each parameter change
T_VL = [compute_T(VL_base * (1 + p), VU_base, SL_base, SU_base) for p in percent_changes]
T_VU = [compute_T(VL_base, VU_base * (1 + p), SL_base, SU_base) for p in percent_changes]
T_SL = [compute_T(VL_base, VU_base, SL_base * (1 + p), SU_base) for p in percent_changes]
T_SU = [compute_T(VL_base, VU_base, SL_base, SU_base * (1 + p)) for p in percent_changes]

# Compute Sensitivity (Gradient Method)
delta = 0.01  # 1% change

sensitivity_VL = (compute_T(VL_base * (1 + delta), VU_base, SL_base, SU_base) - T_base) / (VL_base * delta)
sensitivity_VU = (compute_T(VL_base, VU_base * (1 + delta), SL_base, SU_base) - T_base) / (VU_base * delta)
sensitivity_SL = (compute_T(VL_base, VU_base, SL_base * (1 + delta), SU_base) - T_base) / (SL_base * delta)
sensitivity_SU = (compute_T(VL_base, VU_base, SL_base, SU_base * (1 + delta)) - T_base) / (SU_base * delta)

# Store sensitivities with signs
sensitivities = {
    "Loaded Velocity (VL)":round(VL_base,2),
    "Unloaded Velocity (VU)": round(VU_base,2),
    "Loaded Shovel Rate (SL)": round(SL_base,4),
    "Unloaded Shovel Rate (SU)": round(SU_base,4),
    "Time(T)": round(T_base,2)
}
# print(sensitivities)

# Rank features by absolute impact (keeping signs)
# sortesensitivities = sorted(sensitivities.items(), key=lambda x: abs(x[1]), reverse=True)

# Display results
print("BaseLine Value used for OAT ")
for feature, impact in sensitivities.items():
    print(f"{feature}: {impact:.4f}")

# Plot Sensitivity Curves
plt.figure(figsize=(10, 6))
plt.plot(percent_changes * 100, T_VL, label="Loaded Velocity (VL)", marker='o', linestyle='-')
plt.plot(percent_changes * 100, T_VU, label="Unloaded Velocity (VU)", marker='s', linestyle='--')
plt.plot(percent_changes * 100, T_SL, label="Loaded Shovel Rate (SL)", marker='^', linestyle='-.')
plt.plot(percent_changes * 100, T_SU, label="Unloaded Shovel Rate (SU)", marker='d', linestyle=':')

# Graph Labels
plt.xlabel("Percentage Change (%)")
plt.ylabel("T Value")
plt.title("One-At-A-Time Sensitivity Analysis")
plt.axhline(y=T_base, color='black', linestyle='--', label="Baseline T")
plt.legend()
plt.grid()

# Show the plot
plt.show()
